name: Release

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run tests
        run: go test -v ./...

      - name: Build
        run: go build -v ./...

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go
          
      - name: Auto-merge Release PR
        if: steps.release.outputs.pr
        timeout-minutes: 10
        run: |
          PR_NUMBER=$(echo '${{ steps.release.outputs.pr }}' | jq -r '.number')
          echo "Release PR created: #${PR_NUMBER}"
          echo "Auto-merging release PR #${PR_NUMBER}"
          
          # Try auto-merge with timeout
          echo "Attempting auto-merge..."
          if timeout 300 gh pr merge ${PR_NUMBER} --auto --squash --delete-branch; then
            echo "‚úÖ Auto-merge successful!"
          else
            echo "‚ö†Ô∏è Auto-merge timed out or failed, trying direct merge..."
            
            # Wait a moment for any pending checks
            sleep 10
            
            # Check PR status
            PR_STATUS=$(gh pr view ${PR_NUMBER} --json mergeable,mergeStateStatus --jq '.mergeable,.mergeStateStatus')
            echo "PR Status: $PR_STATUS"
            
            # Try direct merge as fallback
            if gh pr merge ${PR_NUMBER} --squash --delete-branch; then
              echo "‚úÖ Direct merge successful!"
            else
              echo "‚ùå Both auto-merge and direct merge failed"
              echo "PR #${PR_NUMBER} requires manual intervention"
              
              # Get more details for debugging
              gh pr view ${PR_NUMBER} --json url,title,mergeable,mergeStateStatus
              exit 1
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Release Created
        if: steps.release.outputs.release_created
        run: |
          echo "üéâ Release ${{ steps.release.outputs.tag_name }} created!"
          echo "Release URL: ${{ steps.release.outputs.html_url }}" 